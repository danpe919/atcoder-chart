[{"/home/tomo/workspace/atcoder-perf/src/App.tsx":"1","/home/tomo/workspace/atcoder-perf/src/features/graph/utils.ts":"2","/home/tomo/workspace/atcoder-perf/src/hooks/useContestResults.ts":"3","/home/tomo/workspace/atcoder-perf/src/components/InputWithReload.tsx":"4","/home/tomo/workspace/atcoder-perf/src/store.ts":"5","/home/tomo/workspace/atcoder-perf/src/api.tsx":"6","/home/tomo/workspace/atcoder-perf/src/features/controller/Controller.tsx":"7","/home/tomo/workspace/atcoder-perf/src/features/controller/AppBar.tsx":"8","/home/tomo/workspace/atcoder-perf/src/features/graph/ResultsGraph.tsx":"9","/home/tomo/workspace/atcoder-perf/src/hooks/useUserName.ts":"10","/home/tomo/workspace/atcoder-perf/src/components/ShareButton.tsx":"11","/home/tomo/workspace/atcoder-perf/src/hooks/index.ts":"12"},{"size":1308,"mtime":1616912914901,"results":"13","hashOfConfig":"14"},{"size":1916,"mtime":1616904541021,"results":"15","hashOfConfig":"14"},{"size":648,"mtime":1616907810091,"results":"16","hashOfConfig":"14"},{"size":1260,"mtime":1616908387621,"results":"17","hashOfConfig":"14"},{"size":977,"mtime":1616912016511,"results":"18","hashOfConfig":"14"},{"size":794,"mtime":1616906845121,"results":"19","hashOfConfig":"14"},{"size":1061,"mtime":1615821242834,"results":"20","hashOfConfig":"14"},{"size":2654,"mtime":1616906190461,"results":"21","hashOfConfig":"14"},{"size":2229,"mtime":1616904560121,"results":"22","hashOfConfig":"14"},{"size":459,"mtime":1616912272091,"results":"23","hashOfConfig":"14"},{"size":682,"mtime":1616912795071,"results":"24","hashOfConfig":"14"},{"size":124,"mtime":1616906885461,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"moz65w",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tomo/workspace/atcoder-perf/src/App.tsx",["52"],"/home/tomo/workspace/atcoder-perf/src/features/graph/utils.ts",[],["53","54"],"/home/tomo/workspace/atcoder-perf/src/hooks/useContestResults.ts",["55"],"import { useEffect, useState } from 'react';\nimport { ContestResult, fetchContestResult } from '../api';\n\ntype Result = {\n  results: ContestResult[];\n  isLoading: boolean;\n};\n\nexport default function useContestResult(userId: string): Result {\n  const [results, setResults] = useState<ContestResult[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const refresh = async () => {\n    if (userId === '') return;\n    setIsLoading(true);\n    const data = await fetchContestResult(userId);\n    if (data) setResults(data);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [userId]);\n\n  return { results, isLoading };\n}\n","/home/tomo/workspace/atcoder-perf/src/components/InputWithReload.tsx",[],"/home/tomo/workspace/atcoder-perf/src/store.ts",[],"/home/tomo/workspace/atcoder-perf/src/api.tsx",[],"/home/tomo/workspace/atcoder-perf/src/features/controller/Controller.tsx",[],"/home/tomo/workspace/atcoder-perf/src/features/controller/AppBar.tsx",[],"/home/tomo/workspace/atcoder-perf/src/features/graph/ResultsGraph.tsx",[],"/home/tomo/workspace/atcoder-perf/src/hooks/useUserName.ts",[],"/home/tomo/workspace/atcoder-perf/src/components/ShareButton.tsx",[],"/home/tomo/workspace/atcoder-perf/src/hooks/index.ts",[],{"ruleId":null,"fatal":true,"severity":2,"message":"56","line":7,"column":18},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":23,"column":6,"nodeType":"63","endLine":23,"endColumn":14,"suggestions":"64"},"Parsing error: ';' expected.","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [refresh, userId]",{"range":"70","text":"71"},[611,619],"[refresh, userId]"]