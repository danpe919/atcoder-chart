[{"/home/tomo/workspace/atcoder-perf/src/App.tsx":"1","/home/tomo/workspace/atcoder-perf/src/features/graph/utils.ts":"2","/home/tomo/workspace/atcoder-perf/src/hooks/useContestResults.ts":"3","/home/tomo/workspace/atcoder-perf/src/components/InputWithReload.tsx":"4","/home/tomo/workspace/atcoder-perf/src/store.ts":"5","/home/tomo/workspace/atcoder-perf/src/api.tsx":"6","/home/tomo/workspace/atcoder-perf/src/features/controller/Controller.tsx":"7","/home/tomo/workspace/atcoder-perf/src/features/controller/AppBar.tsx":"8","/home/tomo/workspace/atcoder-perf/src/features/graph/ResultsGraph.tsx":"9","/home/tomo/workspace/atcoder-perf/src/hooks/useUserName.ts":"10","/home/tomo/workspace/atcoder-perf/src/components/ShareButton.tsx":"11","/home/tomo/workspace/atcoder-perf/src/hooks/index.ts":"12","/home/tomo/workspace/atcoder-perf/src/index.tsx":"13"},{"size":1308,"mtime":1616912914901,"results":"14","hashOfConfig":"15"},{"size":1916,"mtime":1616904541021,"results":"16","hashOfConfig":"15"},{"size":648,"mtime":1616907810091,"results":"17","hashOfConfig":"15"},{"size":1260,"mtime":1616908387621,"results":"18","hashOfConfig":"15"},{"size":932,"mtime":1616912962441,"results":"19","hashOfConfig":"15"},{"size":794,"mtime":1616906845121,"results":"20","hashOfConfig":"15"},{"size":1061,"mtime":1615821242834,"results":"21","hashOfConfig":"15"},{"size":2654,"mtime":1616906190461,"results":"22","hashOfConfig":"15"},{"size":2229,"mtime":1616904560121,"results":"23","hashOfConfig":"15"},{"size":459,"mtime":1616912272091,"results":"24","hashOfConfig":"15"},{"size":682,"mtime":1616912795071,"results":"25","hashOfConfig":"15"},{"size":124,"mtime":1616906885461,"results":"26","hashOfConfig":"15"},{"size":567,"mtime":1615797591580,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"moz65w",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tomo/workspace/atcoder-perf/src/App.tsx",["57"],"/home/tomo/workspace/atcoder-perf/src/features/graph/utils.ts",[],["58","59"],"/home/tomo/workspace/atcoder-perf/src/hooks/useContestResults.ts",["60"],"import { useEffect, useState } from 'react';\nimport { ContestResult, fetchContestResult } from '../api';\n\ntype Result = {\n  results: ContestResult[];\n  isLoading: boolean;\n};\n\nexport default function useContestResult(userId: string): Result {\n  const [results, setResults] = useState<ContestResult[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const refresh = async () => {\n    if (userId === '') return;\n    setIsLoading(true);\n    const data = await fetchContestResult(userId);\n    if (data) setResults(data);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [userId]);\n\n  return { results, isLoading };\n}\n","/home/tomo/workspace/atcoder-perf/src/components/InputWithReload.tsx",[],"/home/tomo/workspace/atcoder-perf/src/store.ts",[],"/home/tomo/workspace/atcoder-perf/src/api.tsx",[],"/home/tomo/workspace/atcoder-perf/src/features/controller/Controller.tsx",[],["61","62"],"/home/tomo/workspace/atcoder-perf/src/features/controller/AppBar.tsx",[],"/home/tomo/workspace/atcoder-perf/src/features/graph/ResultsGraph.tsx",[],"/home/tomo/workspace/atcoder-perf/src/hooks/useUserName.ts",[],"/home/tomo/workspace/atcoder-perf/src/components/ShareButton.tsx",[],"/home/tomo/workspace/atcoder-perf/src/hooks/index.ts",[],"/home/tomo/workspace/atcoder-perf/src/index.tsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"63","line":7,"column":18},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":23,"column":6,"nodeType":"70","endLine":23,"endColumn":14,"suggestions":"71"},{"ruleId":"64","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},"Parsing error: ';' expected.","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array.","ArrayExpression",["76"],["74"],["75"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [refresh, userId]",{"range":"79","text":"80"},[611,619],"[refresh, userId]"]