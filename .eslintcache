[{"/home/tomo/workspace/atcoder-perf/src/App.tsx":"1","/home/tomo/workspace/atcoder-perf/src/features/graph/utils.ts":"2","/home/tomo/workspace/atcoder-perf/src/hooks/useContestResults.ts":"3","/home/tomo/workspace/atcoder-perf/src/components/InputWithReload.tsx":"4","/home/tomo/workspace/atcoder-perf/src/store.ts":"5","/home/tomo/workspace/atcoder-perf/src/api.tsx":"6","/home/tomo/workspace/atcoder-perf/src/features/controller/Controller.tsx":"7"},{"size":1017,"mtime":1616907437211,"results":"8","hashOfConfig":"9"},{"size":1916,"mtime":1616904541021,"results":"10","hashOfConfig":"9"},{"size":648,"mtime":1616907810091,"results":"11","hashOfConfig":"9"},{"size":1260,"mtime":1616908387621,"results":"12","hashOfConfig":"9"},{"size":701,"mtime":1615814447914,"results":"13","hashOfConfig":"9"},{"size":794,"mtime":1616906845121,"results":"14","hashOfConfig":"9"},{"size":1061,"mtime":1615821242834,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"moz65w",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tomo/workspace/atcoder-perf/src/App.tsx",[],"/home/tomo/workspace/atcoder-perf/src/features/graph/utils.ts",[],["32","33"],"/home/tomo/workspace/atcoder-perf/src/hooks/useContestResults.ts",["34"],"import { useEffect, useState } from 'react';\nimport { ContestResult, fetchContestResult } from '../api';\n\ntype Result = {\n  results: ContestResult[];\n  isLoading: boolean;\n};\n\nexport default function useContestResult(userId: string): Result {\n  const [results, setResults] = useState<ContestResult[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const refresh = async () => {\n    if (userId === '') return;\n    setIsLoading(true);\n    const data = await fetchContestResult(userId);\n    if (data) setResults(data);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    refresh();\n  }, [userId]);\n\n  return { results, isLoading };\n}\n","/home/tomo/workspace/atcoder-perf/src/components/InputWithReload.tsx",[],"/home/tomo/workspace/atcoder-perf/src/store.ts",[],"/home/tomo/workspace/atcoder-perf/src/api.tsx",[],"/home/tomo/workspace/atcoder-perf/src/features/controller/Controller.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":23,"column":6,"nodeType":"41","endLine":23,"endColumn":14,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [refresh, userId]",{"range":"48","text":"49"},[611,619],"[refresh, userId]"]